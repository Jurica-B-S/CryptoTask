interface Data{
    first_chart:Object;
    second_chart:Object;
  }
  interface DrawingData{
    date:string;
    value:number;
  }
  interface AssetData{
    asset_id:string,
    array:Array<DrawingData>
}

  
  interface FarmObject {
    active: Boolean,
    blockchain: string,
    dateAdded: string,
    dateUpdated: string,
    farmId: string,
    farmName: string,
    farmType: string,
    lastFullUpdate: string,
    riskLevel: string,
    scam: Boolean,
    scamInfo: string,
    tvlChange24h: string,
    tvlChange24hValue: Number,
    tvlStaked: Number,
    tvlStakedHistory: Array<DrawingData>
  }
  
  
  interface BlockChainObject {
    active: boolean,
    antiWhale: any,
    aprDaily: Number,
    aprWeekly: Number,
    aprYearly: Number,
    apyYearly: Number,
    asset: string,
    assetAddress: any,
    assetId: string,
    assetLockup: Boolean,
    assetPopupMessage: any,
    assetPrice: Number,
    auditInfo: string,
    blockchain: string,
    category: any,
    collateralLockPeriod: any,
    d_active_reason: any,
    dateAdded: string,
    dateEnding: any,
    dateStarted: any,
    dateUpdated: string,
    daysRemaining: any,
    depositFee: any,
    exchangeName: string,
    exchangePicture: any,
    exchangeUrl: any,
    exchangeVersion: any,
    farm: string,
    farmId: string,
    farmImage: any,
    farmName: string,
    farmType: any,
    feeAprYearly: Number,
    harvestLockup: any,
    harvestLockupInfo: any,
    impermanentLoss: any,
    impermanentLoss30d: any,
    info: any,
    investmentLink: string,
    manuallyCalculatedAPR: false
    maxPoolCap: any,
    multiplier: any,
    nativeToken: any,
    nativeTokenAddress: any,
    nativeTokenInvestLink: any,
    nativeTokenMarketCap: Number,
    nativeTokenPrice: Number,
    new_asset: true
    otherFees: any,
    otherPoolEconomicsInfo: any,
    pid: Number,
    poolAlreadyFilled: false
    priceCorrelation_30d: any,
    rewardTokenA: string,
    rewardTokenAAddress: any,
    rewardTokenAAprYearly: Number,
    rewardTokenAAprYearlyMaxBoosted: Number,
    rewardTokenAPrice: Number,
    rewardTokenAWeeklyAmount: Number,
    rewardTokenAWeeklyDollarAmount: Number,
    rewardTokenB: string,
    rewardTokenBAddress: any,
    rewardTokenBAprYearly: Number,
    rewardTokenBAprYearlyMaxBoosted: Number,
    rewardTokenBPrice: Number,
    rewardTokenBWeeklyAmount: Number,
    rewardTokenBWeeklyDollarAmount: Number,
    scam: false
    scamInfo: any,
    selected_farm: Array<FarmObject>,
    stakingAddress: any,
    stakingLink: string,
    status: string,
    tokenA: string,
    tokenAAddress: any,
    tokenABacking: Number,
    tokenAHolders: Number,
    tokenAHoldersHistory: any,
    tokenAPicture: any,
    tokenAPrice: Number,
    tokenAPriceHistory: any
    tokenB: string,
    tokenBAddress: any,
    tokenBBacking: Number,
    tokenBHolders: Number,
    tokenBPicture: any,
    tokenBPrice: Number,
    tokenC: any,
    tokenCAddress: any,
    tokenCBacking: Number,
    tokenCHolders: Number,
    tokenCPicture: any,
    tokenCPrice: Number,
    tokenD: any,
    tokenDAddress: any,
    tokenDBacking: Number,
    tokenDHolders: Number,
    tokenDPicture: any,
    tokenDPrice: Number,
    tokenE: any,
    tokenEAddress: any,
    tokenEBacking: Number,
    tokenEHolders: Number,
    tokenEPicture: any,
    tokenEPrice: Number,
    transferTax: any,
    transferTaxInfo: any,
    tvlChange24h:string,
    tvlChange24hValue: Number,
    tvlExchange: Number,
    tvlFarm: Number,
    tvlStaked: Number,
    underlyingFarm: any,
    url: any,
    vaultAddress: any,
    volume_24h: any,
    weight: any,
    withdrawalFee: any,
    yearlyTokenRewardPool: Number,
    yieldType: string,
  }

  export type {DrawingData, FarmObject, BlockChainObject, Data, AssetData};